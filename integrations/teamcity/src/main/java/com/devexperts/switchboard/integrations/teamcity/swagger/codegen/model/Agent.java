/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.devexperts.switchboard.integrations.teamcity.swagger.codegen.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
import io.swagger.annotations.ApiModelProperty;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import java.util.Objects;

/**
 * Agent
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-01T01:12:43.660+03:00")
@XmlRootElement(name = "agent")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "agent")
@JsonIgnoreProperties(ignoreUnknown = true)
public class Agent {
    @JsonProperty("id")
    @JacksonXmlProperty(isAttribute = true, localName = "id")
    @XmlAttribute(name = "id")
    private Integer id = null;

    @JsonProperty("name")
    @JacksonXmlProperty(isAttribute = true, localName = "name")
    @XmlAttribute(name = "name")
    private String name = null;

    @JsonProperty("typeId")
    @JacksonXmlProperty(isAttribute = true, localName = "typeId")
    @XmlAttribute(name = "typeId")
    private Integer typeId = null;

    @JsonProperty("connected")
    @JacksonXmlProperty(isAttribute = true, localName = "connected")
    @XmlAttribute(name = "connected")
    private Boolean connected = false;

    @JsonProperty("enabled")
    @JacksonXmlProperty(isAttribute = true, localName = "enabled")
    @XmlAttribute(name = "enabled")
    private Boolean enabled = false;

    @JsonProperty("authorized")
    @JacksonXmlProperty(isAttribute = true, localName = "authorized")
    @XmlAttribute(name = "authorized")
    private Boolean authorized = false;

    @JsonProperty("uptodate")
    @JacksonXmlProperty(isAttribute = true, localName = "uptodate")
    @XmlAttribute(name = "uptodate")
    private Boolean uptodate = false;

    @JsonProperty("ip")
    @JacksonXmlProperty(isAttribute = true, localName = "ip")
    @XmlAttribute(name = "ip")
    private String ip = null;

    @JsonProperty("protocol")
    @JacksonXmlProperty(isAttribute = true, localName = "protocol")
    @XmlAttribute(name = "protocol")
    private String protocol = null;

    @JsonProperty("version")
    @JacksonXmlProperty(isAttribute = true, localName = "version")
    @XmlAttribute(name = "version")
    private String version = null;

    @JsonProperty("lastActivityTime")
    @JacksonXmlProperty(isAttribute = true, localName = "lastActivityTime")
    @XmlAttribute(name = "lastActivityTime")
    private String lastActivityTime = null;

    @JsonProperty("idleSinceTime")
    @JacksonXmlProperty(isAttribute = true, localName = "idleSinceTime")
    @XmlAttribute(name = "idleSinceTime")
    private String idleSinceTime = null;

    @JsonProperty("disconnectionComment")
    @JacksonXmlProperty(isAttribute = true, localName = "disconnectionComment")
    @XmlAttribute(name = "disconnectionComment")
    private String disconnectionComment = null;

    @JsonProperty("href")
    @JacksonXmlProperty(isAttribute = true, localName = "href")
    @XmlAttribute(name = "href")
    private String href = null;

    @JsonProperty("webUrl")
    @JacksonXmlProperty(isAttribute = true, localName = "webUrl")
    @XmlAttribute(name = "webUrl")
    private String webUrl = null;

    @JsonProperty("build")
    @JacksonXmlProperty(localName = "build")
    @XmlElement(name = "build")
    private Build build = null;

    @JsonProperty("properties")
    @JacksonXmlProperty(localName = "properties")
    @XmlElement(name = "properties")
    private Properties properties = null;

    @JsonProperty("pool")
    @JacksonXmlProperty(localName = "pool")
    @XmlElement(name = "pool")
    private AgentPool pool = null;

    @JsonProperty("locator")
    @JacksonXmlProperty(isAttribute = true, localName = "locator")
    @XmlAttribute(name = "locator")
    private String locator = null;

    public Agent id(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @ApiModelProperty(value = "")
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Agent name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @ApiModelProperty(value = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Agent typeId(Integer typeId) {
        this.typeId = typeId;
        return this;
    }

    /**
     * Get typeId
     *
     * @return typeId
     **/
    @ApiModelProperty(value = "")
    public Integer getTypeId() {
        return typeId;
    }

    public void setTypeId(Integer typeId) {
        this.typeId = typeId;
    }

    public Agent connected(Boolean connected) {
        this.connected = connected;
        return this;
    }

    /**
     * Get connected
     *
     * @return connected
     **/
    @ApiModelProperty(value = "")
    public Boolean isConnected() {
        return connected;
    }

    public void setConnected(Boolean connected) {
        this.connected = connected;
    }

    public Agent enabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get enabled
     *
     * @return enabled
     **/
    @ApiModelProperty(value = "")
    public Boolean isEnabled() {
        return enabled;
    }

    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    public Agent authorized(Boolean authorized) {
        this.authorized = authorized;
        return this;
    }

    /**
     * Get authorized
     *
     * @return authorized
     **/
    @ApiModelProperty(value = "")
    public Boolean isAuthorized() {
        return authorized;
    }

    public void setAuthorized(Boolean authorized) {
        this.authorized = authorized;
    }

    public Agent uptodate(Boolean uptodate) {
        this.uptodate = uptodate;
        return this;
    }

    /**
     * Get uptodate
     *
     * @return uptodate
     **/
    @ApiModelProperty(value = "")
    public Boolean isUptodate() {
        return uptodate;
    }

    public void setUptodate(Boolean uptodate) {
        this.uptodate = uptodate;
    }

    public Agent ip(String ip) {
        this.ip = ip;
        return this;
    }

    /**
     * Get ip
     *
     * @return ip
     **/
    @ApiModelProperty(value = "")
    public String getIp() {
        return ip;
    }

    public void setIp(String ip) {
        this.ip = ip;
    }

    public Agent protocol(String protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * Get protocol
     *
     * @return protocol
     **/
    @ApiModelProperty(value = "")
    public String getProtocol() {
        return protocol;
    }

    public void setProtocol(String protocol) {
        this.protocol = protocol;
    }

    public Agent version(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get version
     *
     * @return version
     **/
    @ApiModelProperty(value = "")
    public String getVersion() {
        return version;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    public Agent lastActivityTime(String lastActivityTime) {
        this.lastActivityTime = lastActivityTime;
        return this;
    }

    /**
     * Get lastActivityTime
     *
     * @return lastActivityTime
     **/
    @ApiModelProperty(value = "")
    public String getLastActivityTime() {
        return lastActivityTime;
    }

    public void setLastActivityTime(String lastActivityTime) {
        this.lastActivityTime = lastActivityTime;
    }

    public Agent idleSinceTime(String idleSinceTime) {
        this.idleSinceTime = idleSinceTime;
        return this;
    }

    /**
     * Get idleSinceTime
     *
     * @return idleSinceTime
     **/
    @ApiModelProperty(value = "")
    public String getIdleSinceTime() {
        return idleSinceTime;
    }

    public void setIdleSinceTime(String idleSinceTime) {
        this.idleSinceTime = idleSinceTime;
    }

    public Agent disconnectionComment(String disconnectionComment) {
        this.disconnectionComment = disconnectionComment;
        return this;
    }

    /**
     * Get disconnectionComment
     *
     * @return disconnectionComment
     **/
    @ApiModelProperty(value = "")
    public String getDisconnectionComment() {
        return disconnectionComment;
    }

    public void setDisconnectionComment(String disconnectionComment) {
        this.disconnectionComment = disconnectionComment;
    }

    public Agent href(String href) {
        this.href = href;
        return this;
    }

    /**
     * Get href
     *
     * @return href
     **/
    @ApiModelProperty(value = "")
    public String getHref() {
        return href;
    }

    public void setHref(String href) {
        this.href = href;
    }

    public Agent webUrl(String webUrl) {
        this.webUrl = webUrl;
        return this;
    }

    /**
     * Get webUrl
     *
     * @return webUrl
     **/
    @ApiModelProperty(value = "")
    public String getWebUrl() {
        return webUrl;
    }

    public void setWebUrl(String webUrl) {
        this.webUrl = webUrl;
    }

    public Agent build(Build build) {
        this.build = build;
        return this;
    }

    /**
     * Get build
     *
     * @return build
     **/
    @ApiModelProperty(value = "")
    public Build getBuild() {
        return build;
    }

    public void setBuild(Build build) {
        this.build = build;
    }

    /**
     * Get properties
     *
     * @return properties
     **/
    @ApiModelProperty(value = "")
    public Properties getProperties() {
        return properties;
    }

    public void setProperties(Properties properties) {
        this.properties = properties;
    }

    public Agent pool(AgentPool pool) {
        this.pool = pool;
        return this;
    }

    /**
     * Get pool
     *
     * @return pool
     **/
    @ApiModelProperty(value = "")
    public AgentPool getPool() {
        return pool;
    }

    public void setPool(AgentPool pool) {
        this.pool = pool;
    }

    public Agent locator(String locator) {
        this.locator = locator;
        return this;
    }

    /**
     * Get locator
     *
     * @return locator
     **/
    @ApiModelProperty(value = "")
    public String getLocator() {
        return locator;
    }

    public void setLocator(String locator) {
        this.locator = locator;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Agent agent = (Agent) o;
        return Objects.equals(this.id, agent.id) &&
                Objects.equals(this.name, agent.name) &&
                Objects.equals(this.typeId, agent.typeId) &&
                Objects.equals(this.connected, agent.connected) &&
                Objects.equals(this.enabled, agent.enabled) &&
                Objects.equals(this.authorized, agent.authorized) &&
                Objects.equals(this.uptodate, agent.uptodate) &&
                Objects.equals(this.ip, agent.ip) &&
                Objects.equals(this.protocol, agent.protocol) &&
                Objects.equals(this.version, agent.version) &&
                Objects.equals(this.lastActivityTime, agent.lastActivityTime) &&
                Objects.equals(this.idleSinceTime, agent.idleSinceTime) &&
                Objects.equals(this.disconnectionComment, agent.disconnectionComment) &&
                Objects.equals(this.href, agent.href) &&
                Objects.equals(this.webUrl, agent.webUrl) &&
                Objects.equals(this.build, agent.build) &&
                Objects.equals(this.properties, agent.properties) &&
                Objects.equals(this.pool, agent.pool) &&
                Objects.equals(this.locator, agent.locator);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, typeId, connected, enabled, authorized, uptodate, ip, protocol, version, lastActivityTime, idleSinceTime, disconnectionComment, href, webUrl, build, properties, pool, locator);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Agent {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    typeId: ").append(toIndentedString(typeId)).append("\n");
        sb.append("    connected: ").append(toIndentedString(connected)).append("\n");
        sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
        sb.append("    authorized: ").append(toIndentedString(authorized)).append("\n");
        sb.append("    uptodate: ").append(toIndentedString(uptodate)).append("\n");
        sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
        sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
        sb.append("    version: ").append(toIndentedString(version)).append("\n");
        sb.append("    lastActivityTime: ").append(toIndentedString(lastActivityTime)).append("\n");
        sb.append("    idleSinceTime: ").append(toIndentedString(idleSinceTime)).append("\n");
        sb.append("    disconnectionComment: ").append(toIndentedString(disconnectionComment)).append("\n");
        sb.append("    href: ").append(toIndentedString(href)).append("\n");
        sb.append("    webUrl: ").append(toIndentedString(webUrl)).append("\n");
        sb.append("    build: ").append(toIndentedString(build)).append("\n");
        sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
        sb.append("    pool: ").append(toIndentedString(pool)).append("\n");
        sb.append("    locator: ").append(toIndentedString(locator)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

